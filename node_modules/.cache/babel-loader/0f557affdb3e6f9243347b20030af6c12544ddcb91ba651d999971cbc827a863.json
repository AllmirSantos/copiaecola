{"ast":null,"code":"var _jsxFileName = \"/Users/gok/Documents/Estudos/reactWeb/copiaecola/src/components/animations/animation01/index.jsx\",\n  _s = $RefreshSig$();\nimport * as S from \"./styles\";\nimport { CopyAnimationIndex, CopyAnimationStyle } from \"./data\";\nimport ButtonSimple from \"../../buttons/buttonSimple\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Animation01() {\n  _s();\n  const [isAnimation, setIsAnimation] = useState(false);\n  function onAnimation() {\n    setIsAnimation(!isAnimation);\n  }\n  const [isOpenCode, setIsOpenCode] = useState(false);\n  function onOpenCode() {\n    setIsOpenCode(!isOpenCode);\n  }\n  const [isCodeView, setIsCodeView] = useState(false);\n  function onCodeView() {\n    setIsCodeView(isCodeView);\n  }\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: [/*#__PURE__*/_jsxDEV(S.Animation, {\n        children: [/*#__PURE__*/_jsxDEV(ButtonSimple, {\n          width: \"200px\",\n          title: \"Animar\",\n          onClick: () => {\n            onAnimation(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), isAnimation && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text\",\n          children: \"Anima\\xE7\\xE3o 01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.CodeView, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"viewCode\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: () => {\n                  onOpenCode(true);\n                },\n                className: isOpenCode && \"codeOpen\" || \"codeClose\",\n                children: \"Ver codigo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), isOpenCode && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: () => {\n                  onCodeView(true);\n                },\n                children: \"Index.jsx\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: () => {\n                  onCodeView(false);\n                },\n                children: \"Style.jsx\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), isOpenCode && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [isCodeView === false && /*#__PURE__*/_jsxDEV(CopyAnimationIndex, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 40\n          }, this), setIsCodeView === true && /*#__PURE__*/_jsxDEV(CopyAnimationStyle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Animation01, \"GVdxfpX0BZNSRIydBNJ5jFYawxM=\");\n_c = Animation01;\nvar _c;\n$RefreshReg$(_c, \"Animation01\");","map":{"version":3,"names":["S","CopyAnimationIndex","CopyAnimationStyle","ButtonSimple","useState","jsxDEV","_jsxDEV","Animation01","_s","isAnimation","setIsAnimation","onAnimation","isOpenCode","setIsOpenCode","onOpenCode","isCodeView","setIsCodeView","onCodeView","Container","children","Animation","width","title","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","CodeView","_c","$RefreshReg$"],"sources":["/Users/gok/Documents/Estudos/reactWeb/copiaecola/src/components/animations/animation01/index.jsx"],"sourcesContent":["import * as S from \"./styles\";\nimport { CopyAnimationIndex, CopyAnimationStyle } from \"./data\";\nimport ButtonSimple from \"../../buttons/buttonSimple\";\nimport { useState } from \"react\";\n\nexport default function Animation01() {\n  const [isAnimation, setIsAnimation] = useState(false);\n  function onAnimation() {\n    setIsAnimation(!isAnimation);\n  }\n  const [isOpenCode, setIsOpenCode] = useState(false);\n  function onOpenCode() {\n    setIsOpenCode(!isOpenCode);\n  }\n  const [isCodeView, setIsCodeView] = useState(false);\n  function onCodeView() {\n    setIsCodeView(isCodeView);\n  }\n  return (\n    <S.Container>\n      <pre>\n        <S.Animation>\n          <ButtonSimple\n            width={\"200px\"}\n            title={\"Animar\"}\n            onClick={() => {\n              onAnimation(true);\n            }}\n          />\n          {isAnimation && <p className=\"text\">Animação 01</p>}\n        </S.Animation>\n        <S.CodeView>\n          <div className=\"viewCode\">\n            <div>\n              <span>\n                <p\n                  onClick={() => {\n                    onOpenCode(true);\n                  }}\n                  className={(isOpenCode && \"codeOpen\") || \"codeClose\"}\n                >\n                  Ver codigo\n                </p>\n              </span>\n              {isOpenCode && (\n                <span>\n                  <p\n                    onClick={() => {\n                      onCodeView(true);\n                    }}\n                  >\n                    Index.jsx\n                  </p>\n                  <p\n                    onClick={() => {\n                      onCodeView(false);\n                    }}\n                  >\n                    Style.jsx\n                  </p>\n                </span>\n              )}\n            </div>\n          </div>\n          {isOpenCode && (\n            <div>\n              {isCodeView === false && <CopyAnimationIndex />}\n              {setIsCodeView === true && <CopyAnimationStyle />}\n            </div>\n          )}\n        </S.CodeView>\n      </pre>\n    </S.Container>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}