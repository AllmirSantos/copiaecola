{"ast":null,"code":"var _jsxFileName = \"/Users/gok/Documents/Estudos/reactWeb/copiaecola/src/components/animations/animation04/index.jsx\",\n  _s = $RefreshSig$();\nimport * as S from \"./styles\";\nimport * as T from \"../../../globalStyle.jsx\";\nimport { CopyAnimationIndex, CopyAnimationStyle } from \"./data\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Animation04() {\n  _s();\n  const [isOpenCode, setIsOpenCode] = useState(false);\n  function onOpenCode() {\n    setIsOpenCode(!isOpenCode);\n  }\n  const [selectedButton, setSelectedButton] = useState(0);\n  const isButtonIndex = selectedButton === 0;\n  const isButtonStyle = selectedButton === 1;\n  const [selectedButtonNav, setSelectedButtonNav] = useState(0);\n  const isButtonNav01 = selectedButtonNav === 0;\n  const isButtonNav02 = selectedButtonNav === 1;\n  const isButtonNav03 = selectedButtonNav === 2;\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: /*#__PURE__*/_jsxDEV(T.CodeView, {\n        children: [/*#__PURE__*/_jsxDEV(S.Animation, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => setSelectedButtonNav(0),\n              className: isButtonNav01 && \"navActive\" || \"navDisable\",\n              children: \"01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => setSelectedButtonNav(1),\n              className: isButtonNav02 && \"navActive\" || \"navDisable\",\n              children: \"02\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => setSelectedButtonNav(2),\n              className: isButtonNav03 && \"navActive\" || \"navDisable\",\n              children: \"03\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), isButtonNav01 == 1 && /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"tab\",\n            children: \"TAB 01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 36\n          }, this), isButtonNav02 == 2 && /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"tab\",\n            children: \"TAB 02\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 36\n          }, this), isButtonNav03 == 3 && /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"tab\",\n            children: \"TAB 03\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"viewCode\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: () => {\n                  onOpenCode(true);\n                },\n                className: isOpenCode && \"codeOpen\" || \"codeClose\",\n                children: \"CODIGO \\uD83D\\uDC68\\u200D\\uD83D\\uDCBB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), isOpenCode && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: () => setSelectedButton(0),\n                className: isButtonIndex && \"codeActive\",\n                children: \"Index.jsx \\uD83D\\uDCBB\"\n              }, 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: () => setSelectedButton(1),\n                className: isButtonStyle && \"codeActive\",\n                children: \"Style.jsx \\uD83D\\uDC85\"\n              }, 1, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), isOpenCode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"boxCodeView\",\n          children: [isButtonIndex && /*#__PURE__*/_jsxDEV(CopyAnimationIndex, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this), isButtonStyle && /*#__PURE__*/_jsxDEV(CopyAnimationStyle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Animation04, \"ZKuhHw8h5vocpnA6vSJeIDZFv44=\");\n_c = Animation04;\nvar _c;\n$RefreshReg$(_c, \"Animation04\");","map":{"version":3,"names":["S","T","CopyAnimationIndex","CopyAnimationStyle","useState","jsxDEV","_jsxDEV","Animation04","_s","isOpenCode","setIsOpenCode","onOpenCode","selectedButton","setSelectedButton","isButtonIndex","isButtonStyle","selectedButtonNav","setSelectedButtonNav","isButtonNav01","isButtonNav02","isButtonNav03","Container","children","CodeView","Animation","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gok/Documents/Estudos/reactWeb/copiaecola/src/components/animations/animation04/index.jsx"],"sourcesContent":["import * as S from \"./styles\";\nimport * as T from \"../../../globalStyle.jsx\";\nimport { CopyAnimationIndex, CopyAnimationStyle } from \"./data\";\nimport { useState } from \"react\";\n\nexport default function Animation04() {\n  const [isOpenCode, setIsOpenCode] = useState(false);\n  function onOpenCode() {\n    setIsOpenCode(!isOpenCode);\n  }\n\n  const [selectedButton, setSelectedButton] = useState(0);\n  const isButtonIndex = selectedButton === 0;\n  const isButtonStyle = selectedButton === 1;\n\n  const [selectedButtonNav, setSelectedButtonNav] = useState(0);\n  const isButtonNav01 = selectedButtonNav === 0;\n  const isButtonNav02 = selectedButtonNav === 1;\n  const isButtonNav03 = selectedButtonNav === 2;\n\n  return (\n    <S.Container>\n      <pre>\n        <T.CodeView>\n          <S.Animation>\n            <div>\n              <span\n                onClick={() => setSelectedButtonNav(0)}\n                className={(isButtonNav01 && \"navActive\") || \"navDisable\"}\n              >\n                01\n              </span>\n              <span\n                onClick={() => setSelectedButtonNav(1)}\n                className={(isButtonNav02 && \"navActive\") || \"navDisable\"}\n              >\n                02\n              </span>\n              <span\n                onClick={() => setSelectedButtonNav(2)}\n                className={(isButtonNav03 && \"navActive\") || \"navDisable\"}\n              >\n                03\n              </span>\n            </div>\n            {isButtonNav01 == 1 && <section className=\"tab\">TAB 01</section>}\n            {isButtonNav02 == 2 && <section className=\"tab\">TAB 02</section>}\n            {isButtonNav03 == 3 && <section className=\"tab\">TAB 03</section>}\n          </S.Animation>\n          <div className=\"viewCode\">\n            <div>\n              <span>\n                <p\n                  onClick={() => {\n                    onOpenCode(true);\n                  }}\n                  className={(isOpenCode && \"codeOpen\") || \"codeClose\"}\n                >\n                  CODIGO üë®‚Äçüíª\n                </p>\n              </span>\n              {isOpenCode && (\n                <span>\n                  <p\n                    key={0}\n                    onClick={() => setSelectedButton(0)}\n                    className={isButtonIndex && \"codeActive\"}\n                  >\n                    Index.jsx üíª\n                  </p>\n                  <p\n                    key={1}\n                    onClick={() => setSelectedButton(1)}\n                    className={isButtonStyle && \"codeActive\"}\n                  >\n                    Style.jsx üíÖ\n                  </p>\n                </span>\n              )}\n            </div>\n          </div>\n          {isOpenCode && (\n            <div className=\"boxCodeView\">\n              {isButtonIndex && <CopyAnimationIndex />}\n\n              {isButtonStyle && <CopyAnimationStyle />}\n            </div>\n          )}\n        </T.CodeView>\n      </pre>\n    </S.Container>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}