{"ast":null,"code":"var _jsxFileName = \"/Users/gok/Documents/Estudos/reactWeb/copiaecola/src/components/animations/animation03/index.jsx\",\n  _s = $RefreshSig$();\nimport * as S from \"./styles\";\nimport * as T from \"../../../globalStyle.jsx\";\nimport { CopyAnimationIndex, CopyAnimationStyle } from \"./data\";\nimport ButtonSimple from \"../../buttons/buttonSimple\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Animation03() {\n  _s();\n  const [isOpenCode, setIsOpenCode] = useState(false);\n  function onOpenCode() {\n    setIsOpenCode(!isOpenCode);\n  }\n  const [selectedButton, setSelectedButton] = useState(0);\n  const isButtonIndex = selectedButton === 0;\n  const isButtonStyle = selectedButton === 1;\n  const [selectedButtonNav, setSelectedButtonNav] = useState(0);\n  const isButtonNav01 = selectedButton === 0;\n  const isButtonNav02 = selectedButton === 1;\n  const isButtonNav03 = selectedButton === 1;\n  const isButtonNav04 = selectedButton === 1;\n  const isButtonNav05 = selectedButton === 1;\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: /*#__PURE__*/_jsxDEV(T.CodeView, {\n        children: [/*#__PURE__*/_jsxDEV(S.Animation, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"02\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"03\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"04\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"05\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"viewCode\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: () => {\n                  onOpenCode(true);\n                },\n                className: isOpenCode && \"codeOpen\" || \"codeClose\",\n                children: \"CODIGO \\uD83D\\uDC68\\u200D\\uD83D\\uDCBB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), isOpenCode && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: () => setSelectedButton(0),\n                className: isButtonIndex && \"codeActive\",\n                children: \"Index.jsx \\uD83D\\uDCBB\"\n              }, 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: () => setSelectedButton(1),\n                className: isButtonStyle && \"codeActive\",\n                children: \"Style.jsx \\uD83D\\uDC85\"\n              }, 1, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), isOpenCode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"boxCodeView\",\n          children: [isButtonIndex && /*#__PURE__*/_jsxDEV(CopyAnimationIndex, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this), isButtonStyle && /*#__PURE__*/_jsxDEV(CopyAnimationStyle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Animation03, \"ZKuhHw8h5vocpnA6vSJeIDZFv44=\");\n_c = Animation03;\nvar _c;\n$RefreshReg$(_c, \"Animation03\");","map":{"version":3,"names":["S","T","CopyAnimationIndex","CopyAnimationStyle","ButtonSimple","useState","jsxDEV","_jsxDEV","Animation03","_s","isOpenCode","setIsOpenCode","onOpenCode","selectedButton","setSelectedButton","isButtonIndex","isButtonStyle","selectedButtonNav","setSelectedButtonNav","isButtonNav01","isButtonNav02","isButtonNav03","isButtonNav04","isButtonNav05","Container","children","CodeView","Animation","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["/Users/gok/Documents/Estudos/reactWeb/copiaecola/src/components/animations/animation03/index.jsx"],"sourcesContent":["import * as S from \"./styles\";\nimport * as T from \"../../../globalStyle.jsx\";\nimport { CopyAnimationIndex, CopyAnimationStyle } from \"./data\";\nimport ButtonSimple from \"../../buttons/buttonSimple\";\nimport { useState } from \"react\";\n\nexport default function Animation03() {\n  const [isOpenCode, setIsOpenCode] = useState(false);\n  function onOpenCode() {\n    setIsOpenCode(!isOpenCode);\n  }\n\n  const [selectedButton, setSelectedButton] = useState(0);\n  const isButtonIndex = selectedButton === 0;\n  const isButtonStyle = selectedButton === 1;\n\n  const [selectedButtonNav, setSelectedButtonNav] = useState(0);\n  const isButtonNav01 = selectedButton === 0;\n  const isButtonNav02 = selectedButton === 1;\n  const isButtonNav03 = selectedButton === 1;\n  const isButtonNav04 = selectedButton === 1;\n  const isButtonNav05 = selectedButton === 1;\n\n  return (\n    <S.Container>\n      <pre>\n        <T.CodeView>\n          <S.Animation>\n            <div>\n              <span>01</span>\n              <span>02</span>\n              <span>03</span>\n              <span>04</span>\n              <span>05</span>\n            </div>\n          </S.Animation>\n          <div className=\"viewCode\">\n            <div>\n              <span>\n                <p\n                  onClick={() => {\n                    onOpenCode(true);\n                  }}\n                  className={(isOpenCode && \"codeOpen\") || \"codeClose\"}\n                >\n                  CODIGO üë®‚Äçüíª\n                </p>\n              </span>\n              {isOpenCode && (\n                <span>\n                  <p\n                    key={0}\n                    onClick={() => setSelectedButton(0)}\n                    className={isButtonIndex && \"codeActive\"}\n                  >\n                    Index.jsx üíª\n                  </p>\n                  <p\n                    key={1}\n                    onClick={() => setSelectedButton(1)}\n                    className={isButtonStyle && \"codeActive\"}\n                  >\n                    Style.jsx üíÖ\n                  </p>\n                </span>\n              )}\n            </div>\n          </div>\n          {isOpenCode && (\n            <div className=\"boxCodeView\">\n              {isButtonIndex && <CopyAnimationIndex />}\n\n              {isButtonStyle && <CopyAnimationStyle />}\n            </div>\n          )}\n        </T.CodeView>\n      </pre>\n    </S.Container>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}